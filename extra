Basic JavaScript
NPM
Basic NodeJS(in built)(Os,file,http)
--------------------------
NodeJS(full Stack App) (Node-EJS-Mongo-Express)
MongoDb Basic
Third Party Api 
Redis
Api with NodeJS(Rest)
DashBoard(Crud)
OO_NodeJs
Email With Node
NodeJs with postgres
Oauth(with github)
Login/Logout(JWT)
GraphQl API
Testing
ChatApp
------
Production
-----------
Nginx
Docker



Next Topics
//managing route
Start mongo
//



JSON
JavaScript Object Notation
[
    {
        name:"John",
        class:"UI"
    },
    {
        name:"Ankit",
        class:"Node"
    }
]

package.JSON
> Main / starting file
> Version/packages/ description
> packages
> start/test/build

/****************************
Step to create package.JSON
****************************/
** You must have nodejs installed
> Navigate to the folder where you want to generate with cmd/terminal
> npm init
> Answer all questions
> type "yes"

###> Local package
###> Global package

/****************************
Step to install package
****************************/
> Navigate to the folder where you want to generate with cmd/terminal
> npm i <packagename>/npm install <packagename>

/****************************
Step to  install global package
****************************/
** For creating/ testing or build
#Window
> Open your cmd as admin
> npm i -g @aakashdeveloper/create-node-app

##Mac/Linux
> Open terminal
> sudo npm i -g @aakashdeveloper/create-node-app

npm i @babel/core --save-d


/**********************
Continuous development
*************************/
npm i -g nodemon

CRUD 
Create Read Update delete


////////////////
NoSql

Sno |  Hindi   | english
1   | 80       |
2   |          | 80

[
    {
        sno:1,
        hindi:80
    },
    {
        sno:2,
        english:80
    },
    {
        sno:3,
        english:80,
        computer:80
    }
]
Sql          NoSql
Database     Database
table        collections
row          document



Windows
> C:\data\db
> C:\Program\MongoDb\4.3\bin 
> mongod 
> mongo

Mac
>  sudo mkdir /System/Volumes/Data/data/db
> sudo mongod --dbpath /System/Volumes/Data/data/db


show dbs
use classdatabase
show collections

db.movies.find()
db.movies.find({rate:4.5,language:"ENGLISH"}).pretty()
db.movies.find({rate:4.5},{name:1,type:1}).pretty()

db.movies.find({$or:[rate:4.5,language:"ENGLISH"]},{name:1,type:1}).pretty()
db.movies.find({rate:4.5},{name:1,type:1,_id:0}).pretty()

db.movies.find({rate:4.5},{imageUrl:0,_id:0}).pretty()